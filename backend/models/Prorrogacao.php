<?php

namespace app\models;

use Yii;

/**
 * This is the model class for table "j17_prorrogacoes".
 * Part of this class was self-generated by the Framework 
 *  
 * @author Pedro Frota <pvmf@icomp.ufam.edu.br>
 *
 * @property integer $id
 * @property integer $idAluno
 * @property string $dataSolicitacao
 * @property string $dataInicio
 * @property integer $qtdDias
 * @property string $justificativa
 * @property integer $status
 * 
 * Obtained through relationships:
 * 
 * @property Aluno $aluno
 * @property User $orientador0
 * 
 * Symbolic, responsible for business rules and search:
 * 
 * @property string orientador
 * @property string matricula
 * @property string linhaPesquisa
 * @property string dataSolicitacao0
 * @property string dataInicio0
 * 
 */
class Prorrogacao extends \yii\db\ActiveRecord
{   
    public $orientador;
    public $matricula;
    public $linhaPesquisa;
    public $dataSolicitacao0;
    public $dataInicio0;

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'j17_prorrogacoes';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['idAluno', 'dataSolicitacao', 'dataInicio', 'qtdDias', 'justificativa', 'status', 'dataInicio0'], 'required'],
            [['dataSolicitacao0'], 'required', 'on' => 'create'],
            [['id', 'idAluno', 'qtdDias', 'status'], 'integer'],
            [['matricula', 'orientador', 'dataSolicitacao', 'dataInicio', 'dataInicio0', 'dataSolicitacao0'], 'safe'],
            [['dataSolicitacao0', 'dataInicio0'], 'date', 'format' => 'php:d/m/Y'],
            [['dataInicio0'], 'validateDataInicio0'],
            [['justificativa', 'documento'], 'string'],
            [['idAluno'], 'exist', 'skipOnError' => true, 'targetClass' => Aluno::className(), 'targetAttribute' => ['idAluno' => 'id']],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID do Trancamento',
            'idAluno' => 'Aluno',
            'matricula' => 'Matrícula',
            'linhaPesquisa' => 'Linha de Pesquisa',
            'dataSolicitacao' => 'Data de Solicitação',
            'dataSolicitacao0' => 'Data de Solicitação',
            'qtdDias' => 'Quantidade de Dias',
            'dataInicio' => 'Data de Início',
            'dataInicio0' => 'Data de Início',
            'orientador' => 'Orientador',
            'justificativa' => 'Justificativa',
            'documento' => 'Documento',
            'status' => 'Status',
        ];
    }

    /**
     * Gets the student object
     * 
     * @author Pedro Frota <pvmf@icomp.ufam.edu.br>
     * 
     * @return \yii\db\ActiveQuery
     */
    public function getAluno()
    {
        return $this->hasOne(Aluno::className(), ['id' => 'idAluno']);
    }

    /**
     * Gets the advisor object
     * 
     * @author Pedro Frota <pvmf@icomp.ufam.edu.br>
     * 
     * @return \yii\db\ActiveQuery
     */

    public function getOrientador0() {
        return $this->hasOne(User::className(), ['id' => 'orientador'])->via('aluno');
    }

    public function canDoProrogation() {
        //Limit in Days
        $limitMestrado =  360; //2 times, 180 days each
        $limitDoutorado = 720; //4 times, 180 days each

        $prorogations = $this->find()->where('idAluno = '.$this->idAluno)->all();
        $sum = 0;

        foreach ($prorogations as $prorogation) {
            $sum = $sum + $prorogation->qtdDias;
        }

        if ($this->aluno->curso == 1) { //Mestrado
            if ($sum >= $limitMestrado) return false;
        }
        else { //Doutorado
            if ($sum >= $limitDoutorado) return false;

        }
        return true;
    }

    /**
     * Validates the start date of a prorogation. This cannot be less or equal than the request date.
     * 
     * @author Pedro Frota <pvmf@icomp.ufam.edu.br>
     */

    public function validateDataInicio0($attribute, $params){
        //Number 1 at the end is required to avoid conflicts between variable names
        //I know I could reference class variables using 'this', but I think by doing so, the code 
        //becomes more readable. (Or at least 'less worse' than the other way)

        //Symbolic "declarations" of variables
        //$dataSolicitacao1;
        //$dataInicio1;

        //Required to adapt the date inserted in the view to the format that will be used here
        $dataSolicitacao1 = explode("/", $this->dataSolicitacao0);
        if (sizeof($dataSolicitacao1) == 3) {
            $dataSolicitacao1 = $dataSolicitacao1[2]."-".$dataSolicitacao1[1]."-".$dataSolicitacao1[0];
        }
        else $dataSolicitacao1 = '';
        
        //Required to adapt the date inserted in the view to the format that will be used here
        $dataInicio1 = explode("/", $this->dataInicio0);
        if (sizeof($dataInicio1) == 3) {
            $dataInicio1 = $dataInicio1[2]."-".$dataInicio1[1]."-".$dataInicio1[0];
        }
        else $dataInicio1 = '';

        if (!$this->hasErrors()) {
            if (date("Y-m-d", strtotime($dataInicio1)) < date("Y-m-d", strtotime($dataSolicitacao1))) {
                $this->addError($attribute, 'Por favor, informe uma data posterior ou igual à data de solicitação');
            }
        }
    }
}
